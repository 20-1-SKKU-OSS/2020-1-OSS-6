/*
A사장은 업무 개선방안을 사원들에게 공모하여 n개의 개선방안 레포트를 제출 받았다.
이를 임원들에게 주어 1등에서 n등 까지 순위를 메기라고 지시한다.
이 결과들을 모아 포상할 예정이다.

B부장도 이런 지시를 받아 순위를 메겨야 한다. 한꺼번에 여러 레포트를 비교하려니 머리가 복잡하다.
그래서 이진 트리를 이용하여 2개씩 비교해 가며 순위를 메기기로
하였다.

<입력>
레포트수 입력 : 5
1번, 2번 레포트중 더 우수 한것은? : 2
1번, 3번 레포트중 더 우수 한것은? : 1
1번, 4번 레포트중 더 우수 한것은? : 4
2번, 4번 레포트중 더 우수 한것은? : 2
1번, 5번 레포트중 더 우수 한것은? : 5
2번, 5번 레포트중 더 우수 한것은? : 5

<결과>
1등 : 5
2등 : 2
3등 : 4
4등 : 1
5등 : 3

<해결방안> 1번 레포트를 2진 트리의 루트를 삼고 2~n번 까지 순서대로 트리내용 보다
우수한것은 왼쪽, 우수하지 못한것은 오른쪽의 노드로 삼는 것을 반복한 후
인오더 서치하면 우수한 것에서 그렇지 못한 순서로 나열 된다.

포인트를 사용 하여도 되고, 그냥 배열을 사용해도 되겠죠.
동적 할당이 어렵거나 안되면 레포트를 100개 이내에서 할당하여 처리 하세요.
*/

def comp(l):
    if not l:
        return []
    ll, rl = [], []
    for i in range(1, len(l)):
        gr = input('What is a more great report?(%d, %d) : ' % (l[0], l[i]))
        if int(gr) == l[0]:
            rl.append(l[i])
        else:
            ll.append(l[i])
    return comp(ll) + [l[0]] + comp(rl)


if __name__ == '__main__':
    n = input('Input number of reports : ')
    reports = comp([i for i in range(1, int(n) + 1)])
    for i in range(int(n)):
        print('Rank %d : %d' % (i+1, reports[i]))
